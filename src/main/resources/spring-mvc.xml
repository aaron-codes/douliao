<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd

		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <context:component-scan base-package="me.aaron"/>
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="application/json;charset=UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- cache config 注释ehcache的配置 <cache:annotation-driven /> <bean id="cacheManagerFactory"
        class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:configLocation="/WEB-INF/configuration/ehcache.xml"
        p:shared="false" /> <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
        p:cacheManager-ref="cacheManagerFactory"/> -->
    <mvc:resources location="/media/v2/css/" mapping="/res/css/**"/>
    <mvc:resources location="/media/v2/fonts/" mapping="/res/fonts/**"/>
    <mvc:resources location="/media/v2/js/" mapping="/res/js/**"/>
    <mvc:resources location="/media/v2/images/" mapping="/res/images/**"/>
    <mvc:default-servlet-handler/>

    <mvc:interceptors>
        <!-- locale language change interfaceptor -->

        <bean id="localeChangeInterceptor"
              class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
              p:paramName="locale"/>

    </mvc:interceptors>

    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages/messages"/>
        <property name="cacheSeconds" value="180000"/>
    </bean>

    <!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册 <bean
        id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"
        /> 如果不加默认到 使用classpath下的 ValidationMessages.properties <property name="validationMessageSource"
        ref="messageSource" /> </bean> <mvc:annotation-driven validator="validator"/> -->


    <bean name="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass">
            <value>org.springframework.web.servlet.view.JstlView</value>
        </property>
        <property name="prefix">
            <value>/WEB-INF/views/v2/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>

    <bean id="jacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper"/>

    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <!-- <property name="cookieName" value="language"></property> -->
        <property name="cookieMaxAge" value="94608000"></property>
    </bean>
    <bean class="org.springframework.web.servlet.i18n.FixedLocaleResolver" p:defaultLocale="zh"/>

    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean
                        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
                    <property name="objectMapper" ref="jacksonObjectMapper"/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="restJsonMarshalView"
          class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
        <property name="objectMapper" ref="jacksonObjectMapper"/>
        <property name="renderedAttributes">
            <list>
                <value>response</value>
            </list>
        </property>
    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize">
            <value>1000000000</value>
        </property>
    </bean>
    <!-- 全局异常配置 start -->
    <bean id="exceptionResolver"
          class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Exception">redirect:/errors/404</prop>
                <prop key="java.lang.Throwable">redirect:/errors/404</prop>
                <prop key="java.lang.RuntimeException">redirect:/errors/404</prop>
                <prop key="java.sql.SQLException">redirect:/errors/404</prop>
            </props>
        </property>
        <property name="statusCodes">
            <props>
                <prop key="errors/500">500</prop>
                <prop key="errors/404">404</prop>
            </props>
        </property>
        <!--设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
        <property name="warnLogCategory" value="INFO"/>
        <!--默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
        <property name="defaultErrorView" value="/errors/500"/>
        <!--默认HTTP状态码 -->
        <property name="defaultStatusCode" value="500"/>
    </bean>
    <!-- 全局异常配置 end -->

</beans>